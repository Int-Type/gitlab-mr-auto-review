spring.application.name=codereview
############################################
# 서버 설정
############################################
server.port=${PORT:8080}
server.servlet.context-path=${CONTEXT_PATH:/}
# 시간대 설정
spring.jackson.time-zone=Asia/Seoul
############################################
# GitLab 연동
############################################
app.gitlab.url=${GITLAB_URL}
app.gitlab.token=${GITLAB_TOKEN}
app.gitlab.webhook-secret=${GITLAB_WEBHOOK_SECRET}
app.gitlab.allowed-projects=${GITLAB_ALLOWED_PROJECTS:}
############################################
# LLM 통합 설정 (다중 LLM 지원)
############################################
# 통합 설정 - 모든 어댁터에서 공통으로 우선 적용되는 설정
app.llm.api-key=${LLM_API_KEY:}
app.llm.model=${LLM_MODEL:}
# 주의: system-prompt 설정은 더 이상 사용되지 않음 (하드코딩으로 관리)
# app.llm.system-prompt=${LLM_SYSTEM_PROMPT:}
# OpenAI 개별 설정
app.llm.openai.api-url=https://api.openai.com/v1
app.llm.openai.api-key=${LLM_OPENAI_API_KEY:}
app.llm.openai.model=gpt-4o-mini
# Claude 개별 설정
app.llm.claude.api-url=https://api.anthropic.com/v1
app.llm.claude.api-key=${LLM_CLAUDE_API_KEY:}
app.llm.claude.model=claude-sonnet-4-20250514
# Gemini 개별 설정
app.llm.gemini.api-url=https://generativelanguage.googleapis.com/v1beta
app.llm.gemini.api-key=${LLM_GEMINI_API_KEY:}
app.llm.gemini.model=gemini-2.5-pro
############################################
# 로그 설정
############################################
logging.level.com.inttype.codereview=${APP_LOG_LEVEL:INFO}
logging.level.org.gitlab4j=${GITLAB4J_LOG_LEVEL:INFO}
logging.level.org.springframework.web=${SPRING_WEB_LOG_LEVEL:INFO}
############################################
# Actuator (헬스체크)
############################################
management.endpoints.web.exposure.include=health,info
management.endpoint.health.show-details=when_authorized
############################################
# 비동기 실행기 (스레드풀 설정)
############################################
spring.task.execution.pool.core-size=4
spring.task.execution.pool.max-size=8
spring.task.execution.pool.queue-capacity=100
spring.task.execution.thread-name-prefix=mr-review-
############################################
# Resilience4j (Retry / CircuitBreaker)
############################################
# CircuitBreaker: gitlab
resilience4j.circuitbreaker.instances.gitlab.sliding-window-type=COUNT_BASED
resilience4j.circuitbreaker.instances.gitlab.sliding-window-size=20
resilience4j.circuitbreaker.instances.gitlab.failure-rate-threshold=50
resilience4j.circuitbreaker.instances.gitlab.wait-duration-in-open-state=10s
resilience4j.circuitbreaker.instances.gitlab.permitted-number-of-calls-in-half-open-state=5
resilience4j.circuitbreaker.instances.gitlab.minimum-number-of-calls=10
# Retry: gitlab
resilience4j.retry.instances.gitlab.max-attempts=3
resilience4j.retry.instances.gitlab.wait-duration=500ms
resilience4j.retry.instances.gitlab.retry-exceptions=org.gitlab4j.api.GitLabApiException,java.io.IOException
# Retry: openai
resilience4j.retry.instances.openai.max-attempts=3
resilience4j.retry.instances.openai.wait-duration=500ms
resilience4j.retry.instances.openai.retry-exceptions=java.io.IOException,org.springframework.web.reactive.function.client.WebClientResponseException
# Retry: claude
resilience4j.retry.instances.claude.max-attempts=3
resilience4j.retry.instances.claude.wait-duration=500ms
resilience4j.retry.instances.claude.retry-exceptions=java.io.IOException,org.springframework.web.reactive.function.client.WebClientResponseException
# Retry: gemini
resilience4j.retry.instances.gemini.max-attempts=3
resilience4j.retry.instances.gemini.wait-duration=500ms
resilience4j.retry.instances.gemini.retry-exceptions=java.io.IOException,org.springframework.web.reactive.function.client.WebClientResponseException
# Retry: llm (통합 fallback 설정)
resilience4j.retry.instances.llm.max-attempts=3
resilience4j.retry.instances.llm.wait-duration=500ms
resilience4j.retry.instances.llm.retry-exceptions=java.io.IOException,org.springframework.web.reactive.function.client.WebClientResponseException
############################################
# 리뷰 모드 설정
############################################
# persona: 페르소나 기반 전문화된 리뷰 (하드코딩된 페르소나별 프롬프트 사용)
# integrated: 통합 LLM 리뷰 (하드코딩된 범용 프롬프트 사용)
app.review.mode=${REVIEW_MODE:persona}
